@using System.Security.Claims
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Wf.PaperManagement.Blazor.Global.Nav
@inherits ProComponentBase
<MMenu OffsetX Bottom OffsetY>
    <ActivatorContent Context="menuContext">
        <div class="text-center border-left-solid" style="width:fit-content;margin-right: 10px;padding-left: 10px">
            @* <MAvatar @attributes="menuContext.Attrs" Size=40> *@
            @*     <MImage Src="/img/avatar/2.svg"></MImage> *@
            @* </MAvatar> *@
            <div @attributes="menuContext.Attrs" class="text-center">
                <MIcon Size=40 Color="neutral-lighten-4">fa:fas fa-user-circle</MIcon>
                @User?.Identity?.Name
            </div>
        </div>
    </ActivatorContent>
    <ChildContent>
        <MList Dense>
            <MListItem Link OnClick="HandleLogout">
                <MListItemIcon Class="mr-4">
                    <MIcon Size=20 Color="neutral-lighten-4">fa:fas fa-sign-in-alt</MIcon>
                </MListItemIcon>
                <MListItemContent>
                    <MListItemTitle>
                        <span class="neutral-lighten-4--text">@T("Logout")</span>
                    </MListItemTitle>
                </MListItemContent>
            </MListItem>
        </MList>
    </ChildContent>
</MMenu>

@code {

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    private ClaimsPrincipal? User { get; set; }

    [Inject]
    private NavigationManager Nav { get; set; } = null!;


    private void HandleLogout()
    {
        Nav.NavigateToLogout("authentication/logout", "/");
    }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationState is not null)
        {
            var authState = await AuthenticationState;
            User = authState.User;
        }
    }


}